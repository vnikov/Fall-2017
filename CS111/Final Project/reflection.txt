	Regarding the final project, I choose William Shakespeare and J. K. Rowling text as the sources for comparing. For the text used to compare against the sources, I choose my second paper in WR098, which is about compare and contrast. Before comparing, I omitted a paragraph from both sources in order to test my TextModel. The result of comparing both omitted paragraphs in correct: the one from Rowling results in similarity to Rowling's text and vice versa. After comparing my essay with both sources, my text similars to Rowling' text. In my opinion after many trial, Rowling's text uses more general and well-known words than Shakespeare's, so most texts that I have tried comparing against both sources are likely to similar to Rowling's text.
	Even though the result is satisfactory, there are still restriction that TextModel, indeed Python, cannot handle in clean_text(txt) function and will result in UnicodeError: a special text that contains certain punctuation marks such as --(em dash), “”(Opening and closing  double quote), ’(Closing single apostrophe), etc. Those special marks must be removed from both sources and comparing text before processing to avoid UnicodeError. Apart from that, stem(s) is the significant factor for comparing texts. Although knowing many prefixes and suffixes, it is difficult to come up with the suitable algorithm for stemming words such as stem('party') and stem('Parties') will return 'par' and 'part', respectively, although they should return the same result. 